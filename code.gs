/**
 * –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Google Apps Script –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–æ–≥–æ–≤—ã–º –æ–∫–Ω–æ–º
 * –§–∞–π–ª: Code.gs
 */

/**
 * –ü–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ data_category
 */
function getCategories() {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω data_category
    const namedRange = ss.getRangeByName("data_category");
    
    if (!namedRange) {
      throw new Error('–ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω data_category –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    const categories = namedRange.getValues();
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ
    const uniqueCategories = [...new Set(categories.flat().filter(cat => cat !== ""))];
    
    return uniqueCategories.sort();
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ' + error.toString());
    return ['–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π'];
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–µ—Å—è—Ü–µ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
 */
function getMonths() {
  return [
    '—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', '–∞–ø—Ä', '–º–∞–π', '–∏—é–Ω',
    '–∏—é–ª', '–∞–≤–≥', '—Å–µ–Ω', '–æ–∫—Ç', '–Ω–æ—è', '–¥–µ–∫'
  ];
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≥–æ–¥
 */
function getCurrentYear() {
  return new Date().getFullYear();
}

/**
 * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É
 */
/**
 * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É –ë–∞–Ω–∫_–≥—Ä—É–ø–ø—ã –Ω–∞ –ª–∏—Å—Ç–µ –û–ø–µ—Ä–∞—Ü–∏–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º–µ—Ç–æ–¥ insertRowAfter –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤–Ω—É—Ç—Ä—å —Ç–∞–±–ª–∏—Ü—ã
 */
function saveRecord(data) {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName("–û–ø–µ—Ä–∞—Ü–∏–∏");
    
    if (!sheet) {
      throw new Error('–õ–∏—Å—Ç "–û–ø–µ—Ä–∞—Ü–∏–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    // –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º
    const dataRange = sheet.getDataRange();
    const values = dataRange.getValues();
    
    let headerRow = -1;
    let lastDataRow = -1;
    
    // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    for (let i = 0; i < values.length; i++) {
      if (values[i].includes('–î–∞—Ç–∞') && values[i].includes('–ö–∞—Ç–µ–≥–æ—Ä–∏—è')) {
        headerRow = i + 1; // +1 –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–æ–∫–∏ –≤ Sheet
        
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã
        for (let j = i + 1; j < values.length; j++) {
          if (values[j].some(cell => cell !== '')) {
            lastDataRow = j + 1;
          } else {
            break; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
          }
        }
        break;
      }
    }
    
    if (headerRow === -1) {
      throw new Error('–¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    }
    
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
    if (lastDataRow === -1) {
      lastDataRow = headerRow;
    }
    
    // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
    sheet.insertRowAfter(lastDataRow);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const currentDate = new Date();
    const monthNames = ['—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', '–∞–ø—Ä', '–º–∞–π', '–∏—é–Ω', '–∏—é–ª', '–∞–≤–≥', '—Å–µ–Ω', '–æ–∫—Ç', '–Ω–æ—è', '–¥–µ–∫'];
    const monthNumber = monthNames.indexOf(data.month) + 1;
    const monthDate = new Date(parseInt(data.year), monthNumber - 1, 1);
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const headers = sheet.getRange(headerRow, 1, 1, sheet.getLastColumn()).getValues()[0];
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
    const newRowData = [];
    for (let i = 0; i < headers.length; i++) {
      switch(headers[i]) {
        case '–î–∞—Ç–∞':
          newRowData.push(currentDate);
          break;
        case '–ö–∞—Ç–µ–≥–æ—Ä–∏—è':
          newRowData.push(data.category);
          break;
        case '–°—É–º–º–∞':
          newRowData.push(parseFloat(data.amount));
          break;
        case '–ú–µ—Å—è—Ü':
          newRowData.push(monthDate);
          break;
        case '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π':
          newRowData.push(data.comment || '');
          break;
        default:
          newRowData.push('');
      }
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
    sheet.getRange(lastDataRow + 1, 1, 1, newRowData.length).setValues([newRowData]);
    
    // –°–û–†–¢–ò–†–£–ï–ú —Ç–∞–±–ª–∏—Ü—É –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    sortTableByDate();
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const monthYearDisplay = data.month + ' ' + data.year;
    return {
      success: true,
      message: `‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\nüìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${data.category}\nüí∞ –°—É–º–º–∞: ${data.amount}‚ÇΩ\nüìÖ –ü–µ—Ä–∏–æ–¥: ${monthYearDisplay}${data.comment ? '\nüí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ' + data.comment : ''}`
    };
    
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏: ' + error.toString());
    return {
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ' + error.toString()
    };
  }
}

/**
 * –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –ë–∞–Ω–∫_–≥—Ä—É–ø–ø—ã –ø–æ —Å—Ç–æ–ª–±—Ü—É –î–∞—Ç–∞ (–æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º)
 */
function sortTableByDate() {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName("–û–ø–µ—Ä–∞—Ü–∏–∏");
    
    if (!sheet) {
      console.log('–õ–∏—Å—Ç "–û–ø–µ—Ä–∞—Ü–∏–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å –ª–∏—Å—Ç–∞
    const dataRange = sheet.getDataRange();
    const values = dataRange.getValues();
    
    // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ –∏ —Å—Ç–æ–ª–±–µ—Ü "–î–∞—Ç–∞"
    let headerRow = -1;
    let dateCol = -1;
    
    for (let i = 0; i < values.length; i++) {
      const row = values[i];
      const dateIndex = row.indexOf('–î–∞—Ç–∞');
      
      if (dateIndex !== -1) {
        headerRow = i;
        dateCol = dateIndex;
        break;
      }
    }
    
    if (headerRow === -1 || dateCol === -1) {
      console.log('–°—Ç–æ–ª–±–µ—Ü "–î–∞—Ç–∞" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (–∏—Å–∫–ª—é—á–∞—è –∑–∞–≥–æ–ª–æ–≤–æ–∫)
    let lastDataRow = headerRow + 1;
    for (let i = headerRow + 1; i < values.length; i++) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫–µ
      if (values[i].some(cell => cell !== '')) {
        lastDataRow = i + 1; // +1 —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å—ã –≤ getRange –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 1
      } else {
        break; // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º, –µ—Å–ª–∏ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
      }
    }
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    if (lastDataRow > headerRow + 1) {
      // –î–∏–∞–ø–∞–∑–æ–Ω –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ (headerRow + 2 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å 1 –∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫)
      const sortRange = sheet.getRange(headerRow + 2, 1, lastDataRow - headerRow - 1, sheet.getLastColumn());
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Å—Ç–æ–ª–±—Ü—É –î–∞—Ç–∞ (dateCol + 1 –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ —Å 1)
      sortRange.sort({
        column: dateCol + 1,
        ascending: false // false = –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º (Z > A)
      });
    }
    
    console.log('–¢–∞–±–ª–∏—Ü–∞ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ –¥–∞—Ç–µ');
    
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ: ' + error.toString());
  }
}

/**
 * –í–∫–ª—é—á–∏—Ç—å —Ñ–∞–π–ª HTML –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å CSS –∏ JS)
 */
function include(filename) {
  return HtmlService.createHtmlOutputFromFile(filename).getContent();
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –º–µ—Å—è—Ü–µ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 */
function getPaidMonths(category) {
  try {
    if (!category) {
      return [];
    }
    
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName("–û–ø–µ—Ä–∞—Ü–∏–∏");
    
    if (!sheet) {
      console.log('–õ–∏—Å—Ç "–û–ø–µ—Ä–∞—Ü–∏–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return [];
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å –ª–∏—Å—Ç–∞
    const dataRange = sheet.getDataRange();
    const values = dataRange.getValues();
    
    // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
    let headerRow = -1;
    let categoryCol = -1;
    let monthCol = -1;
    
    for (let i = 0; i < values.length; i++) {
      const row = values[i];
      const catIndex = row.indexOf('–ö–∞—Ç–µ–≥–æ—Ä–∏—è');
      const monthIndex = row.indexOf('–ú–µ—Å—è—Ü');
      
      if (catIndex !== -1 && monthIndex !== -1) {
        headerRow = i;
        categoryCol = catIndex;
        monthCol = monthIndex;
        break;
      }
    }
    
    if (headerRow === -1) {
      console.log('–ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
      return [];
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º –æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –º–µ—Å—è—Ü—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const paidMonths = [];
    const monthNames = ['—è–Ω–≤', '—Ñ–µ–≤', '–º–∞—Ä', '–∞–ø—Ä', '–º–∞–π', '–∏—é–Ω', '–∏—é–ª', '–∞–≤–≥', '—Å–µ–Ω', '–æ–∫—Ç', '–Ω–æ—è', '–¥–µ–∫'];
    
    for (let i = headerRow + 1; i < values.length; i++) {
      const row = values[i];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
      if (row[categoryCol] === category && row[monthCol]) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É –º–µ—Å—è—Ü-–≥–æ–¥
        const monthDate = new Date(row[monthCol]);
        if (!isNaN(monthDate.getTime())) {
          const month = monthNames[monthDate.getMonth()];
          const year = monthDate.getFullYear();
          const monthYearStr = `${month} ${year}`;
          
          // –î–æ–±–∞–≤–ª—è–µ–º, –µ—Å–ª–∏ –µ—â–µ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ
          if (!paidMonths.includes(monthYearStr)) {
            paidMonths.push(monthYearStr);
          }
        }
      }
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (—Å–Ω–∞—á–∞–ª–∞ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –¥–∞—Ç—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏)
    paidMonths.sort((a, b) => {
      const [monthA, yearA] = a.split(' ');
      const [monthB, yearB] = b.split(' ');
      const dateA = new Date(parseInt(yearA), monthNames.indexOf(monthA));
      const dateB = new Date(parseInt(yearB), monthNames.indexOf(monthB));
      return dateB - dateA; // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç –Ω–æ–≤—ã—Ö –∫ —Å—Ç–∞—Ä—ã–º
    });
    
    return paidMonths;
    
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –º–µ—Å—è—Ü–µ–≤: ' + error.toString());
    return [];
  }
}